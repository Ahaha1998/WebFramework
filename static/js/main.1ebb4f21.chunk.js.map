{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","Container","Row","Col","className","Card","Body","lg","style","width","Media","as","height","src","margin","ProgressBar","now","label","marginBottom","textAlign","marginLeft","marginRight","paddingBottom","letterSpacing","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ebb4f21.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Row, Col, Card, Media, ProgressBar } from \"react-bootstrap\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <h1 className=\"title\">Biodata</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"my-img\">\n              <Card className=\"box-name\">\n                <Card.Body>\n                  <a className=\"bb-white\">W</a>ahyu Hidayah\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"box-subtitle\">\n                    <Card.Body>\n                      <h2 className=\"subtitle\">Ability</h2>\n                    </Card.Body>\n                  </Card>\n                  <ul className=\"list-unstyled br-b\" style={{ width: \"90%\" }}>\n                    <Media as=\"li\">\n                      <img\n                        width={45}\n                        height={45}\n                        className=\"mg-img\"\n                        src=\"coding.png\"\n                      />\n                      <Media.Body>\n                        <h3 className=\"subcontent\">Coding</h3>\n                      </Media.Body>\n                    </Media>\n                    <Media as=\"li\">\n                      <img\n                        width={45}\n                        height={45}\n                        className=\"mg-img\"\n                        src=\"gaming.svg\"\n                      />\n                      <Media.Body>\n                        <h3 className=\"subcontent\">Gaming</h3>\n                      </Media.Body>\n                    </Media>\n                    <Media as=\"li\">\n                      <img\n                        width={45}\n                        height={45}\n                        className=\"mg-img\"\n                        src=\"drawing.svg\"\n                      />\n                      <Media.Body>\n                        <h3 className=\"subcontent\">Drawing</h3>\n                      </Media.Body>\n                    </Media>\n                  </ul>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"box-subtitle\">\n                    <Card.Body>\n                      <h2 className=\"subtitle\">Skill</h2>\n                    </Card.Body>\n                  </Card>\n                  <h3 className=\"subcontent\" style={{ margin: \"12px 0px\" }}>\n                    Public Speaking\n                  </h3>\n                  <ProgressBar className=\"prog-bar\" now={40} label={\"40%\"} />\n                  <h3 className=\"subcontent\" style={{ margin: \"12px 0px\" }}>\n                    Creativity\n                  </h3>\n                  <ProgressBar className=\"prog-bar\" now={60} label={\"60%\"} />\n                  <h3 className=\"subcontent\" style={{ margin: \"12px 0px\" }}>\n                    Time Management\n                  </h3>\n                  <ProgressBar className=\"prog-bar\" now={70} label={\"70%\"} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Card className=\"box-subtitle\" style={{ width: \"90%\" }}>\n                    <Card.Body>\n                      <h2 className=\"subtitle\">Birthday</h2>\n                    </Card.Body>\n                  </Card>\n                  <ul className=\"list-unstyled\" style={{ marginBottom: \"0px\" }}>\n                    <Media\n                      as=\"li\"\n                      style={{ width: \"90%\", textAlign: \"center\" }}\n                    >\n                      <img\n                        width={40}\n                        height={40}\n                        className=\"mg-img\"\n                        src=\"birthday-left.svg\"\n                        style={{ marginLeft: \"20px\", marginRight: \"0px\" }}\n                      />\n                      <Media.Body>\n                        <h3\n                          className=\"subcontent\"\n                          style={{ margin: \"18px 0px\" }}\n                        >\n                          1998, September 26 at Pasuruan\n                        </h3>\n                      </Media.Body>\n                      <img\n                        width={40}\n                        height={40}\n                        className=\"mg-img\"\n                        src=\"birthday-right.svg\"\n                        style={{ marginLeft: \"0px\", marginRight: \"20px\" }}\n                      />\n                    </Media>\n                  </ul>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n        <Row className=\"body-content\" style={{ paddingBottom: \"0px\" }}>\n          <Col>\n            <Container>\n              <Row>\n                <Col className=\"br-dash\" lg=\"6\">\n                  <h3 className=\"subtitle\">About Me</h3>\n                  <p className=\"content\">\n                    Halo, perkenalkan aku adalah mahasiswa Teknik Informatika\n                    dari kampus Politeknik Negeri Malang. Di sini aku sedang\n                    mengerjakan tugas web biodata untuk mata kuliah Pemrograman\n                    Berbasis Framework.\n                  </p>\n                  <h3 className=\"subtitle\">My Dream</h3>\n                  <p className=\"content\" style={{ textAlign: \"right\" }}>\n                    Menjadi seorang Programmer dan Dosen.\n                  </p>\n                </Col>\n                <Col lg=\"6\">\n                  <Row>\n                    <Col>\n                      <h3 className=\"subtitle left\">Quotes</h3>\n                      <p className=\"content\">\n                        <i className=\"fas fa-quote-left quotes-icon\" />\n                        <span className=\"i\">\n                          No One Can Hurt You When I In Your Heart.\n                        </span>\n                        <i className=\"fas fa-quote-right quotes-icon\" />\n                      </p>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col lg=\"5\">\n                      <h3 className=\"subtitle left\">Social Media</h3>\n                      <i className=\"fab fa-facebook fa-2x white-icon\" />\n                      <i className=\"fab fa-instagram fa-2x white-icon\" />\n                      <i className=\"fab fa-github fa-2x white-icon\" />\n                      <i className=\"fab fa-pinterest fa-2x white-icon\" />\n                    </Col>\n                    <Col lg=\"6\">\n                      <h3 className=\"subtitle left\">Phone Number</h3>\n                      <p className=\"content\" style={{ letterSpacing: \"2px\" }}>\n                        <i className=\"fas fa-phone fa-flip-horizontal icon\" />\n                        <a className=\"bb-white\">+62</a> 895-6307-71532\n                      </p>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <h3 className=\"subtitle left\">Address</h3>\n                      <p className=\"content\">\n                        <i className=\"fas fa-home icon\" />\n                        Jl. Pondok Pesantren Al-Ghozali No.138 Pakis Kembar\n                      </p>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h3 className=\"subtitle bt-dash\">End.</h3>\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}